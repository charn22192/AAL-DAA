#include <stdio.h>
#define INF 9999
#define MAX 100

int main() {
    int cost[MAX][MAX];
    int visited[MAX], n, i, j;
    int no_of_edges = 0;
    int min, a = -1, b = -1;

    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the adjacency matrix (use 0 for no connection):\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &cost[i][j]);
            if (cost[i][j] == 0) {
                cost[i][j] = INF;  // No edge
            }
        }
    }

    for (i = 0; i < n; i++) {
        visited[i] = 0;
    }

    visited[0] = 1;

    printf("Edges in the Minimum Spanning Tree:\n");

    int total_cost = 0;
    while (no_of_edges < n - 1) {
        min = INF;

        for (i = 0; i < n; i++) {
            if (visited[i]) {
                for (j = 0; j < n; j++) {
                    if (!visited[j] && cost[i][j] < min) {
                        min = cost[i][j];
                        a = i;
                        b = j;
                    }
                }
            }
        }

        if (a != -1 && b != -1) {
            printf("Edge %d: (%d - %d) cost = %d\n", no_of_edges + 1, a, b, min);
            total_cost += min;
            visited[b] = 1;
            no_of_edges++;
        }
    }

    printf("Total cost of Minimum Spanning Tree = %d\n", total_cost);

    return 0;
}
